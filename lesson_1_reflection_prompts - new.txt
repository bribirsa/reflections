How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It is easy to find the changes you made which will highlight where the bug was introduced.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You can see the changes that other developers have made and understand what it is they were doing.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Relies on the developer to decide when to commit.  Thus, Dev can screw him/herself by not doing a commit when he should.  On the other hand, it ensure that each commit is meaningful.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because many programming projects require changes to multiple related files.  The changes impact multiple files.

How can you use the commands git log and git diff to view the history of files?

    Use git log to view a listing of all commits to the repository.  Identify the one you want by the comments.  Use git diff to compare the changes from that commit to the previous one to find the differences


How might using version control make you more confident to make changes that
could break something?

    With proper use, you should always be able to go back to a previous version.

Now that you have your workspace set up, what do you want to try using Git for?

     As a safety net to be able to make changes to files without worry of screwing everything up
     
